#!/bin/sh
export OS=debian
echo "export OS=$OS" >>$WORKDIRECTORY/envsetup.sh

# Update package lists
echo "$MSG_UPPACK"
if [ "$SUDO" = "yes" ]; then
  $UNENCRYTEDPASSWD
  echo $PASSWD | sudo -SE apt-get update -y
  $ENCRYTEDPASSWD
elif [ "$SUDO" = "no" ]; then
  apt-get update -y
fi

# Installation of basic build dependencies
echo "$MSG_BUILDDEP"
if [ "$SUDO" = "yes" ]; then
  $UNENCRYTEDPASSWD
  echo $PASSWD | sudo -SE apt-get install --no-install-recommends gettext build-essential autoconf libtool asciidoc xmlto automake asciidoc xmlto git curl pkg-config python3-jsonschema python3-jinja2 -y
  $ENCRYTEDPASSWD
elif [ "$SUDO" = "no" ]; then
  apt-get install --no-install-recommends gettext build-essential autoconf libtool asciidoc xmlto automake asciidoc xmlto git curl pkg-config python3-jsonschema python3-jinja2 -y
fi

# Install port occupancy detection tool
echo "$MSG_PORT_CHECK"
if [ "$SUDO" = "yes" ]; then
  $UNENCRYTEDPASSWD
  echo $PASSWD | sudo -SE apt-get install lsof -y
  $ENCRYTEDPASSWD
elif [ "$SUDO" = "no" ]; then
  apt-get install lsof -y
fi

# Install user-space interfaces to the POSIX 1003.1e capabilities available in Linux kernels
echo "$MSG_CAP2"
if [ "$SUDO" = "yes" ]; then
  $UNENCRYTEDPASSWD
  echo $PASSWD | sudo -SE apt-get install libcap2-bin -y
  $ENCRYTEDPASSWD
elif [ "$SUDO" = "no" ]; then
  apt-get install libcap2-bin -y
fi

# Install psmisc for service restart after ss_update
echo "$MSG_PSMISC"
if [ "$SUDO" = "yes" ]; then
  $UNENCRYTEDPASSWD
  echo $PASSWD | sudo -SE apt-get install psmisc -y
  $ENCRYTEDPASSWD
elif [ "$SUDO" = "no" ]; then
  apt-get install psmisc -y
fi

echo "$MSG_WORKDIR"
cd $WORKDIRECTORY/src

if [ ! -f $WORKDIRECTORY/lib/libsodium.a ]; then
. $DEP/libsodium
fi
if [ ! -f $WORKDIRECTORY/lib/libmbedtls.a ]; then
. $DEP/mbedtls
fi
if [ ! -f $WORKDIRECTORY/lib/libpcre.la ]; then
. $DEP/pcre
fi
if [ ! -f $WORKDIRECTORY/lib/libev.la ]; then
. $DEP/libev
fi
if [ ! -f $WORKDIRECTORY/lib/libcares.la ]; then
. $DEP/c-ares
fi
export PATH=$WORKDIRECTORY/bin:$PATH
echo "export PATH=$WORKDIRECTORY/bin:\$PATH" >>$WORKDIRECTORY/envsetup.sh

if [ ! -f $WORKDIRECTORY/bin/ss-server ]; then
. $DEP/shadowsocks
fi
